CREATE TABLE IF NOT EXISTS ADMIN(
	username varchar(30) primary key,
    password varchar(20),
    first_name varchar(30),
    last_name varchar(30)
);

CREATE TABLE IF NOT EXISTS Student(
student_id char(13) primary key,
 first_name varchar(30),
 last_name varchar(30),
 password varchar(20)
);

CREATE TABLE IF NOT EXISTS PROFESSOR(
	professor_id varchar(30) primary key,
    password varchar(30),
    email varchar(100),
    first_name varchar(30),
    last_name varchar(30)
);

CREATE TABLE IF NOT EXISTS PROF_MOBNO(
	username varchar(30),
    mob_no varchar(13),
    primary key(username,mob_no)
);
    
CREATE TABLE IF NOT EXISTS COURSE(
	course_id varchar(50) primary key,
    ic varchar(30),
	course_name varchar(30),
    foreign key(ic) references Professor(Professor_id)
);
  
CREATE TABLE IF NOT EXISTS SECTION(
	section_id varchar(3),
    course_id varchar(50),
    foreign key(course_id) references Course(course_id),
    primary key(section_id,course_id)
);

CREATE TABLE IF NOT EXISTS STUDIES(
	student_id varchar(13),
    section_id varchar(3),
    course_id varchar(50),
    foreign key(student_id) references Student(student_id),
    foreign key(section_id) references Section(section_id),
    foreign key(course_id) references Course(course_id),
    primary key(student_id, section_id, course_id)
);

CREATE TABLE IF NOT EXISTS TEACHES(
	professor_id varchar(30),
    section_id varchar(3),
    course_id varchar(50),
    foreign key(professor_id) references professor(professor_id),
    foreign key(section_id) references section(section_id),
    foreign key(course_id) references course(course_id)
);

CREATE TABLE IF NOT EXISTS TOPIC(
	topic_id int AUTO_INCREMENT primary key,
    type bool,
    heading varchar(50),
    section_id varchar(3),
    course_id varchar(50),
    foreign key(section_id) references section(section_id),
    foreign key(course_id) references course(course_id)
);

CREATE TABLE IF NOT EXISTS ITEM(
	item_id int AUTO_INCREMENT,
    topic_id int,
    description varchar(200),
    file_link varchar(200),
    foreign key(topic_id) references topic(topic_id),
    primary key(item_id,topic_id)
);